{"version":3,"file":"extension.js","sources":["../fable_modules/fable-library-js.4.19.3/Util.js","../fable_modules/fable-library-js.4.19.3/Types.js","../a-libs/timeline/x-nullable.fs.js","../backend/Extension.fs.js"],"sourcesContent":["// tslint:disable:ban-types\nexport function isArrayLike(x) {\n    return Array.isArray(x) || ArrayBuffer.isView(x);\n}\nexport function isIterable(x) {\n    return x != null && typeof x === \"object\" && Symbol.iterator in x;\n}\nexport function isEnumerable(x) {\n    return x != null && typeof x.GetEnumerator === \"function\";\n}\nexport function isComparer(x) {\n    return x != null && typeof x.Compare === \"function\";\n}\nexport function isComparable(x) {\n    return x != null && typeof x.CompareTo === \"function\";\n}\nexport function isEquatable(x) {\n    return x != null && typeof x.Equals === \"function\";\n}\nexport function isHashable(x) {\n    return x != null && typeof x.GetHashCode === \"function\";\n}\nexport function isDisposable(x) {\n    return x != null && typeof x.Dispose === \"function\";\n}\nexport function disposeSafe(x) {\n    if (isDisposable(x)) {\n        x.Dispose();\n    }\n}\nexport function defaultOf() {\n    return null;\n}\nexport function sameConstructor(x, y) {\n    return Object.getPrototypeOf(x)?.constructor === Object.getPrototypeOf(y)?.constructor;\n}\nexport class Enumerable {\n    constructor(en) {\n        this.en = en;\n    }\n    GetEnumerator() { return this.en; }\n    \"System.Collections.IEnumerable.GetEnumerator\"() { return this.en; }\n    [Symbol.iterator]() {\n        return this;\n    }\n    next() {\n        const hasNext = this.en[\"System.Collections.IEnumerator.MoveNext\"]();\n        const current = hasNext ? this.en[\"System.Collections.Generic.IEnumerator`1.get_Current\"]() : undefined;\n        return { done: !hasNext, value: current };\n    }\n}\nexport class Enumerator {\n    constructor(iter) {\n        this.iter = iter;\n        this.current = defaultOf();\n    }\n    [\"System.Collections.Generic.IEnumerator`1.get_Current\"]() {\n        return this.current;\n    }\n    [\"System.Collections.IEnumerator.get_Current\"]() {\n        return this.current;\n    }\n    [\"System.Collections.IEnumerator.MoveNext\"]() {\n        const cur = this.iter.next();\n        this.current = cur.value;\n        return !cur.done;\n    }\n    [\"System.Collections.IEnumerator.Reset\"]() {\n        throw new Error(\"JS iterators cannot be reset\");\n    }\n    Dispose() {\n        return;\n    }\n}\nexport function toEnumerable(e) {\n    if (isEnumerable(e)) {\n        return e;\n    }\n    else {\n        return new Enumerable(new Enumerator(e[Symbol.iterator]()));\n    }\n}\nexport function getEnumerator(e) {\n    if (isEnumerable(e)) {\n        return e.GetEnumerator();\n    }\n    else {\n        return new Enumerator(e[Symbol.iterator]());\n    }\n}\nexport function toIterator(en) {\n    return {\n        next() {\n            const hasNext = en[\"System.Collections.IEnumerator.MoveNext\"]();\n            const current = hasNext ? en[\"System.Collections.Generic.IEnumerator`1.get_Current\"]() : undefined;\n            return { done: !hasNext, value: current };\n        },\n    };\n}\nexport function enumerableToIterator(e) {\n    return toIterator(toEnumerable(e).GetEnumerator());\n}\nexport class Comparer {\n    constructor(f) {\n        this.Compare = f || compare;\n    }\n}\nexport function comparerFromEqualityComparer(comparer) {\n    // Sometimes IEqualityComparer also implements IComparer\n    if (isComparer(comparer)) {\n        return new Comparer(comparer.Compare);\n    }\n    else {\n        return new Comparer((x, y) => {\n            const xhash = comparer.GetHashCode(x);\n            const yhash = comparer.GetHashCode(y);\n            if (xhash === yhash) {\n                return comparer.Equals(x, y) ? 0 : -1;\n            }\n            else {\n                return xhash < yhash ? -1 : 1;\n            }\n        });\n    }\n}\nexport function assertEqual(actual, expected, msg) {\n    if (!equals(actual, expected)) {\n        throw Object.assign(new Error(msg || `Expected: ${expected} - Actual: ${actual}`), {\n            actual,\n            expected,\n        });\n    }\n}\nexport function assertNotEqual(actual, expected, msg) {\n    if (equals(actual, expected)) {\n        throw Object.assign(new Error(msg || `Expected: ${expected} - Actual: ${actual}`), {\n            actual,\n            expected,\n        });\n    }\n}\nexport class Lazy {\n    constructor(factory) {\n        this.factory = factory;\n        this.isValueCreated = false;\n    }\n    get Value() {\n        if (!this.isValueCreated) {\n            this.createdValue = this.factory();\n            this.isValueCreated = true;\n        }\n        return this.createdValue;\n    }\n    get IsValueCreated() {\n        return this.isValueCreated;\n    }\n}\nexport function lazyFromValue(v) {\n    return new Lazy(() => v);\n}\nexport function padWithZeros(i, length) {\n    return i.toString(10).padStart(length, \"0\");\n}\nexport function padLeftAndRightWithZeros(i, lengthLeft, lengthRight) {\n    return i.toString(10).padStart(lengthLeft, \"0\").padEnd(lengthRight, \"0\");\n}\nexport function dateOffset(date) {\n    const date1 = date;\n    return typeof date1.offset === \"number\"\n        ? date1.offset\n        : (date.kind === 1 /* DateKind.UTC */\n            ? 0 : date.getTimezoneOffset() * -60000);\n}\nexport function int16ToString(i, radix) {\n    i = i < 0 && radix != null && radix !== 10 ? 0xFFFF + i + 1 : i;\n    return i.toString(radix);\n}\nexport function int32ToString(i, radix) {\n    i = i < 0 && radix != null && radix !== 10 ? 0xFFFFFFFF + i + 1 : i;\n    return i.toString(radix);\n}\nexport function int64ToString(i, radix) {\n    i = i < 0 && radix != null && radix !== 10 ? 0xffffffffffffffffn + i + 1n : i;\n    return i.toString(radix);\n}\nexport class ObjectRef {\n    static id(o) {\n        if (!ObjectRef.idMap.has(o)) {\n            ObjectRef.idMap.set(o, ++ObjectRef.count);\n        }\n        return ObjectRef.idMap.get(o);\n    }\n}\nObjectRef.idMap = new WeakMap();\nObjectRef.count = 0;\nexport function stringHash(s) {\n    let i = 0;\n    let h = 5381;\n    const len = s.length;\n    while (i < len) {\n        h = (h * 33) ^ s.charCodeAt(i++);\n    }\n    return h;\n}\nexport function numberHash(x) {\n    return x * 2654435761 | 0;\n}\nexport function bigintHash(x) {\n    return stringHash(x.toString(32));\n}\n// From https://stackoverflow.com/a/37449594\nexport function combineHashCodes(hashes) {\n    let h1 = 0;\n    const len = hashes.length;\n    for (let i = 0; i < len; i++) {\n        const h2 = hashes[i];\n        h1 = ((h1 << 5) + h1) ^ h2;\n    }\n    return h1;\n}\nexport function physicalHash(x) {\n    if (x == null) {\n        return 0;\n    }\n    switch (typeof x) {\n        case \"boolean\":\n            return x ? 1 : 0;\n        case \"number\":\n            return numberHash(x);\n        case \"bigint\":\n            return bigintHash(x);\n        case \"string\":\n            return stringHash(x);\n        default:\n            return numberHash(ObjectRef.id(x));\n    }\n}\nexport function identityHash(x) {\n    if (isHashable(x)) {\n        return x.GetHashCode();\n    }\n    else {\n        return physicalHash(x);\n    }\n}\nexport function dateHash(x) {\n    return x.getTime();\n}\nexport function arrayHash(x) {\n    const len = x.length;\n    const hashes = new Array(len);\n    for (let i = 0; i < len; i++) {\n        hashes[i] = structuralHash(x[i]);\n    }\n    return combineHashCodes(hashes);\n}\nexport function structuralHash(x) {\n    if (x == null) {\n        return 0;\n    }\n    switch (typeof x) {\n        case \"boolean\":\n            return x ? 1 : 0;\n        case \"number\":\n            return numberHash(x);\n        case \"bigint\":\n            return bigintHash(x);\n        case \"string\":\n            return stringHash(x);\n        default: {\n            if (isHashable(x)) {\n                return x.GetHashCode();\n            }\n            else if (isArrayLike(x)) {\n                return arrayHash(x);\n            }\n            else if (x instanceof Date) {\n                return dateHash(x);\n            }\n            else if (Object.getPrototypeOf(x)?.constructor === Object) {\n                // TODO: check call-stack to prevent cyclic objects?\n                const hashes = Object.values(x).map((v) => structuralHash(v));\n                return combineHashCodes(hashes);\n            }\n            else {\n                // Classes don't implement GetHashCode by default, but must use identity hashing\n                return numberHash(ObjectRef.id(x));\n                // return stringHash(String(x));\n            }\n        }\n    }\n}\n// Intended for custom numeric types, like long or decimal\nexport function fastStructuralHash(x) {\n    return stringHash(String(x));\n}\n// Intended for declared types that may or may not implement GetHashCode\nexport function safeHash(x) {\n    // return x == null ? 0 : isHashable(x) ? x.GetHashCode() : numberHash(ObjectRef.id(x));\n    return identityHash(x);\n}\nexport function equalArraysWith(x, y, eq) {\n    if (x == null) {\n        return y == null;\n    }\n    if (y == null) {\n        return false;\n    }\n    if (x.length !== y.length) {\n        return false;\n    }\n    for (let i = 0; i < x.length; i++) {\n        if (!eq(x[i], y[i])) {\n            return false;\n        }\n    }\n    return true;\n}\nexport function equalArrays(x, y) {\n    return equalArraysWith(x, y, equals);\n}\nfunction equalObjects(x, y) {\n    const xKeys = Object.keys(x);\n    const yKeys = Object.keys(y);\n    if (xKeys.length !== yKeys.length) {\n        return false;\n    }\n    xKeys.sort();\n    yKeys.sort();\n    for (let i = 0; i < xKeys.length; i++) {\n        if (xKeys[i] !== yKeys[i] || !equals(x[xKeys[i]], y[yKeys[i]])) {\n            return false;\n        }\n    }\n    return true;\n}\nexport function physicalEquality(x, y) {\n    return x === y;\n}\nexport function equals(x, y) {\n    if (x === y) {\n        return true;\n    }\n    else if (x == null) {\n        return y == null;\n    }\n    else if (y == null) {\n        return false;\n    }\n    else if (isEquatable(x)) {\n        return x.Equals(y);\n    }\n    else if (isArrayLike(x)) {\n        return isArrayLike(y) && equalArrays(x, y);\n    }\n    else if (typeof x !== \"object\") {\n        return false;\n    }\n    else if (x instanceof Date) {\n        return (y instanceof Date) && compareDates(x, y) === 0;\n    }\n    else {\n        return Object.getPrototypeOf(x)?.constructor === Object && equalObjects(x, y);\n    }\n}\nexport function compareDates(x, y) {\n    let xtime;\n    let ytime;\n    // DateTimeOffset and DateTime deals with equality differently.\n    if (\"offset\" in x && \"offset\" in y) {\n        xtime = x.getTime();\n        ytime = y.getTime();\n    }\n    else {\n        xtime = x.getTime() + dateOffset(x);\n        ytime = y.getTime() + dateOffset(y);\n    }\n    return xtime === ytime ? 0 : (xtime < ytime ? -1 : 1);\n}\nexport function comparePrimitives(x, y) {\n    return x === y ? 0 : (x < y ? -1 : 1);\n}\nexport function compareArraysWith(x, y, comp) {\n    if (x == null) {\n        return y == null ? 0 : 1;\n    }\n    if (y == null) {\n        return -1;\n    }\n    if (x.length !== y.length) {\n        return x.length < y.length ? -1 : 1;\n    }\n    for (let i = 0, j = 0; i < x.length; i++) {\n        j = comp(x[i], y[i]);\n        if (j !== 0) {\n            return j;\n        }\n    }\n    return 0;\n}\nexport function compareArrays(x, y) {\n    return compareArraysWith(x, y, compare);\n}\nfunction compareObjects(x, y) {\n    const xKeys = Object.keys(x);\n    const yKeys = Object.keys(y);\n    if (xKeys.length !== yKeys.length) {\n        return xKeys.length < yKeys.length ? -1 : 1;\n    }\n    xKeys.sort();\n    yKeys.sort();\n    for (let i = 0, j = 0; i < xKeys.length; i++) {\n        const key = xKeys[i];\n        if (key !== yKeys[i]) {\n            return key < yKeys[i] ? -1 : 1;\n        }\n        else {\n            j = compare(x[key], y[key]);\n            if (j !== 0) {\n                return j;\n            }\n        }\n    }\n    return 0;\n}\nexport function compare(x, y) {\n    if (x === y) {\n        return 0;\n    }\n    else if (x == null) {\n        return y == null ? 0 : -1;\n    }\n    else if (y == null) {\n        return 1;\n    }\n    else if (isComparable(x)) {\n        return x.CompareTo(y);\n    }\n    else if (isArrayLike(x)) {\n        return isArrayLike(y) ? compareArrays(x, y) : -1;\n    }\n    else if (typeof x !== \"object\") {\n        return x < y ? -1 : 1;\n    }\n    else if (x instanceof Date) {\n        return y instanceof Date ? compareDates(x, y) : -1;\n    }\n    else {\n        return Object.getPrototypeOf(x)?.constructor === Object ? compareObjects(x, y) : -1;\n    }\n}\nexport function min(comparer, x, y) {\n    return comparer(x, y) < 0 ? x : y;\n}\nexport function max(comparer, x, y) {\n    return comparer(x, y) > 0 ? x : y;\n}\nexport function clamp(comparer, value, min, max) {\n    return (comparer(value, min) < 0) ? min : (comparer(value, max) > 0) ? max : value;\n}\nexport function createAtom(value) {\n    let atom = value;\n    return (...args) => {\n        if (args.length === 0) {\n            return atom;\n        }\n        else {\n            atom = args[0];\n        }\n    };\n}\nexport function createObj(fields) {\n    const obj = {};\n    for (const kv of fields) {\n        obj[kv[0]] = kv[1];\n    }\n    return obj;\n}\nexport function jsOptions(mutator) {\n    const opts = {};\n    mutator(opts);\n    return opts;\n}\nexport function round(value, digits = 0) {\n    const m = Math.pow(10, digits);\n    const n = +(digits ? value * m : value).toFixed(8);\n    const i = Math.floor(n);\n    const f = n - i;\n    const e = 1e-8;\n    const r = (f > 0.5 - e && f < 0.5 + e) ? ((i % 2 === 0) ? i : i + 1) : Math.round(n);\n    return digits ? r / m : r;\n}\nexport function sign(x) {\n    return x > 0 ? 1 : x < 0 ? -1 : 0;\n}\nexport function unescapeDataString(s) {\n    // https://stackoverflow.com/a/4458580/524236\n    return decodeURIComponent((s).replace(/\\+/g, \"%20\"));\n}\nexport function escapeDataString(s) {\n    return encodeURIComponent(s).replace(/!/g, \"%21\")\n        .replace(/'/g, \"%27\")\n        .replace(/\\(/g, \"%28\")\n        .replace(/\\)/g, \"%29\")\n        .replace(/\\*/g, \"%2A\");\n}\nexport function escapeUriString(s) {\n    return encodeURI(s);\n}\n// ICollection.Clear and Count members can be called on Arrays\n// or Dictionaries so we need a runtime check (see #1120)\nexport function count(col) {\n    if (isArrayLike(col)) {\n        return col.length;\n    }\n    else {\n        let count = 0;\n        for (const _ of col) {\n            count++;\n        }\n        return count;\n    }\n}\nexport function clear(col) {\n    if (isArrayLike(col)) {\n        col.splice(0);\n    }\n    else {\n        col.clear();\n    }\n}\nconst curried = new WeakMap();\nexport function uncurry2(f) {\n    if (f == null) {\n        return null;\n    }\n    const f2 = (a1, a2) => f(a1)(a2);\n    curried.set(f2, f);\n    return f2;\n}\nexport function curry2(f) {\n    return curried.get(f) ?? ((a1) => (a2) => f(a1, a2));\n}\nexport function uncurry3(f) {\n    if (f == null) {\n        return null;\n    }\n    const f2 = (a1, a2, a3) => f(a1)(a2)(a3);\n    curried.set(f2, f);\n    return f2;\n}\nexport function curry3(f) {\n    return curried.get(f)\n        ?? ((a1) => (a2) => (a3) => f(a1, a2, a3));\n}\nexport function uncurry4(f) {\n    if (f == null) {\n        return null;\n    }\n    const f2 = (a1, a2, a3, a4) => f(a1)(a2)(a3)(a4);\n    curried.set(f2, f);\n    return f2;\n}\nexport function curry4(f) {\n    return curried.get(f)\n        ?? ((a1) => (a2) => (a3) => (a4) => f(a1, a2, a3, a4));\n}\nexport function uncurry5(f) {\n    if (f == null) {\n        return null;\n    }\n    const f2 = (a1, a2, a3, a4, a5) => f(a1)(a2)(a3)(a4)(a5);\n    curried.set(f2, f);\n    return f2;\n}\nexport function curry5(f) {\n    return curried.get(f)\n        ?? ((a1) => (a2) => (a3) => (a4) => (a5) => f(a1, a2, a3, a4, a5));\n}\nexport function uncurry6(f) {\n    if (f == null) {\n        return null;\n    }\n    const f2 = (a1, a2, a3, a4, a5, a6) => f(a1)(a2)(a3)(a4)(a5)(a6);\n    curried.set(f2, f);\n    return f2;\n}\nexport function curry6(f) {\n    return curried.get(f)\n        ?? ((a1) => (a2) => (a3) => (a4) => (a5) => (a6) => f(a1, a2, a3, a4, a5, a6));\n}\nexport function uncurry7(f) {\n    if (f == null) {\n        return null;\n    }\n    const f2 = (a1, a2, a3, a4, a5, a6, a7) => f(a1)(a2)(a3)(a4)(a5)(a6)(a7);\n    curried.set(f2, f);\n    return f2;\n}\nexport function curry7(f) {\n    return curried.get(f)\n        ?? ((a1) => (a2) => (a3) => (a4) => (a5) => (a6) => (a7) => f(a1, a2, a3, a4, a5, a6, a7));\n}\nexport function uncurry8(f) {\n    if (f == null) {\n        return null;\n    }\n    const f2 = (a1, a2, a3, a4, a5, a6, a7, a8) => f(a1)(a2)(a3)(a4)(a5)(a6)(a7)(a8);\n    curried.set(f2, f);\n    return f2;\n}\nexport function curry8(f) {\n    return curried.get(f)\n        ?? ((a1) => (a2) => (a3) => (a4) => (a5) => (a6) => (a7) => (a8) => f(a1, a2, a3, a4, a5, a6, a7, a8));\n}\nexport function uncurry9(f) {\n    if (f == null) {\n        return null;\n    }\n    const f2 = (a1, a2, a3, a4, a5, a6, a7, a8, a9) => f(a1)(a2)(a3)(a4)(a5)(a6)(a7)(a8)(a9);\n    curried.set(f2, f);\n    return f2;\n}\nexport function curry9(f) {\n    return curried.get(f)\n        ?? ((a1) => (a2) => (a3) => (a4) => (a5) => (a6) => (a7) => (a8) => (a9) => f(a1, a2, a3, a4, a5, a6, a7, a8, a9));\n}\nexport function uncurry10(f) {\n    if (f == null) {\n        return null;\n    }\n    const f2 = (a1, a2, a3, a4, a5, a6, a7, a8, a9, a10) => f(a1)(a2)(a3)(a4)(a5)(a6)(a7)(a8)(a9)(a10);\n    curried.set(f2, f);\n    return f2;\n}\nexport function curry10(f) {\n    return curried.get(f)\n        ?? ((a1) => (a2) => (a3) => (a4) => (a5) => (a6) => (a7) => (a8) => (a9) => (a10) => f(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10));\n}\nexport function uncurry11(f) {\n    if (f == null) {\n        return null;\n    }\n    const f2 = (a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11) => f(a1)(a2)(a3)(a4)(a5)(a6)(a7)(a8)(a9)(a10)(a11);\n    curried.set(f2, f);\n    return f2;\n}\nexport function curry11(f) {\n    return curried.get(f)\n        ?? ((a1) => (a2) => (a3) => (a4) => (a5) => (a6) => (a7) => (a8) => (a9) => (a10) => (a11) => f(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11));\n}\nexport function uncurry12(f) {\n    if (f == null) {\n        return null;\n    }\n    const f2 = (a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12) => f(a1)(a2)(a3)(a4)(a5)(a6)(a7)(a8)(a9)(a10)(a11)(a12);\n    curried.set(f2, f);\n    return f2;\n}\nexport function curry12(f) {\n    return curried.get(f)\n        ?? ((a1) => (a2) => (a3) => (a4) => (a5) => (a6) => (a7) => (a8) => (a9) => (a10) => (a11) => (a12) => f(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12));\n}\nexport function uncurry13(f) {\n    if (f == null) {\n        return null;\n    }\n    const f2 = (a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13) => f(a1)(a2)(a3)(a4)(a5)(a6)(a7)(a8)(a9)(a10)(a11)(a12)(a13);\n    curried.set(f2, f);\n    return f2;\n}\nexport function curry13(f) {\n    return curried.get(f)\n        ?? ((a1) => (a2) => (a3) => (a4) => (a5) => (a6) => (a7) => (a8) => (a9) => (a10) => (a11) => (a12) => (a13) => f(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13));\n}\nexport function uncurry14(f) {\n    if (f == null) {\n        return null;\n    }\n    const f2 = (a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14) => f(a1)(a2)(a3)(a4)(a5)(a6)(a7)(a8)(a9)(a10)(a11)(a12)(a13)(a14);\n    curried.set(f2, f);\n    return f2;\n}\nexport function curry14(f) {\n    return curried.get(f)\n        ?? ((a1) => (a2) => (a3) => (a4) => (a5) => (a6) => (a7) => (a8) => (a9) => (a10) => (a11) => (a12) => (a13) => (a14) => f(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14));\n}\nexport function uncurry15(f) {\n    if (f == null) {\n        return null;\n    }\n    const f2 = (a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15) => f(a1)(a2)(a3)(a4)(a5)(a6)(a7)(a8)(a9)(a10)(a11)(a12)(a13)(a14)(a15);\n    curried.set(f2, f);\n    return f2;\n}\nexport function curry15(f) {\n    return curried.get(f)\n        ?? ((a1) => (a2) => (a3) => (a4) => (a5) => (a6) => (a7) => (a8) => (a9) => (a10) => (a11) => (a12) => (a13) => (a14) => (a15) => f(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15));\n}\nexport function uncurry16(f) {\n    if (f == null) {\n        return null;\n    }\n    const f2 = (a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16) => f(a1)(a2)(a3)(a4)(a5)(a6)(a7)(a8)(a9)(a10)(a11)(a12)(a13)(a14)(a15)(a16);\n    curried.set(f2, f);\n    return f2;\n}\nexport function curry16(f) {\n    return curried.get(f)\n        ?? ((a1) => (a2) => (a3) => (a4) => (a5) => (a6) => (a7) => (a8) => (a9) => (a10) => (a11) => (a12) => (a13) => (a14) => (a15) => (a16) => f(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16));\n}\nexport function uncurry17(f) {\n    if (f == null) {\n        return null;\n    }\n    const f2 = (a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17) => f(a1)(a2)(a3)(a4)(a5)(a6)(a7)(a8)(a9)(a10)(a11)(a12)(a13)(a14)(a15)(a16)(a17);\n    curried.set(f2, f);\n    return f2;\n}\nexport function curry17(f) {\n    return curried.get(f)\n        ?? ((a1) => (a2) => (a3) => (a4) => (a5) => (a6) => (a7) => (a8) => (a9) => (a10) => (a11) => (a12) => (a13) => (a14) => (a15) => (a16) => (a17) => f(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17));\n}\nexport function uncurry18(f) {\n    if (f == null) {\n        return null;\n    }\n    const f2 = (a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18) => f(a1)(a2)(a3)(a4)(a5)(a6)(a7)(a8)(a9)(a10)(a11)(a12)(a13)(a14)(a15)(a16)(a17)(a18);\n    curried.set(f2, f);\n    return f2;\n}\nexport function curry18(f) {\n    return curried.get(f)\n        ?? ((a1) => (a2) => (a3) => (a4) => (a5) => (a6) => (a7) => (a8) => (a9) => (a10) => (a11) => (a12) => (a13) => (a14) => (a15) => (a16) => (a17) => (a18) => f(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18));\n}\nexport function uncurry19(f) {\n    if (f == null) {\n        return null;\n    }\n    const f2 = (a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19) => f(a1)(a2)(a3)(a4)(a5)(a6)(a7)(a8)(a9)(a10)(a11)(a12)(a13)(a14)(a15)(a16)(a17)(a18)(a19);\n    curried.set(f2, f);\n    return f2;\n}\nexport function curry19(f) {\n    return curried.get(f)\n        ?? ((a1) => (a2) => (a3) => (a4) => (a5) => (a6) => (a7) => (a8) => (a9) => (a10) => (a11) => (a12) => (a13) => (a14) => (a15) => (a16) => (a17) => (a18) => (a19) => f(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19));\n}\nexport function uncurry20(f) {\n    if (f == null) {\n        return null;\n    }\n    const f2 = (a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20) => f(a1)(a2)(a3)(a4)(a5)(a6)(a7)(a8)(a9)(a10)(a11)(a12)(a13)(a14)(a15)(a16)(a17)(a18)(a19)(a20);\n    curried.set(f2, f);\n    return f2;\n}\nexport function curry20(f) {\n    return curried.get(f)\n        ?? ((a1) => (a2) => (a3) => (a4) => (a5) => (a6) => (a7) => (a8) => (a9) => (a10) => (a11) => (a12) => (a13) => (a14) => (a15) => (a16) => (a17) => (a18) => (a19) => (a20) => f(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20));\n}\n// More performant method to copy arrays, see #2352\nexport function copyToArray(source, sourceIndex, target, targetIndex, count) {\n    if (ArrayBuffer.isView(source) && ArrayBuffer.isView(target)) {\n        target.set(source.subarray(sourceIndex, sourceIndex + count), targetIndex);\n    }\n    else {\n        for (let i = 0; i < count; ++i) {\n            target[targetIndex + i] = source[sourceIndex + i];\n        }\n    }\n}\n","import { combineHashCodes, compare, compareArrays, equalArrays, equals, sameConstructor, numberHash, structuralHash } from \"./Util.js\";\nexport function seqToString(self) {\n    let count = 0;\n    let str = \"[\";\n    for (const x of self) {\n        if (count === 0) {\n            str += toString(x);\n        }\n        else if (count === 100) {\n            str += \"; ...\";\n            break;\n        }\n        else {\n            str += \"; \" + toString(x);\n        }\n        count++;\n    }\n    return str + \"]\";\n}\nexport function toString(x, callStack = 0) {\n    if (x != null && typeof x === \"object\") {\n        if (typeof x.toString === \"function\") {\n            return x.toString();\n        }\n        else if (Symbol.iterator in x) {\n            return seqToString(x);\n        }\n        else { // TODO: Date?\n            const cons = Object.getPrototypeOf(x)?.constructor;\n            return cons === Object && callStack < 10\n                // Same format as recordToString\n                ? \"{ \" + Object.entries(x).map(([k, v]) => k + \" = \" + toString(v, callStack + 1)).join(\"\\n  \") + \" }\"\n                : cons?.name ?? \"\";\n        }\n    }\n    return String(x);\n}\nexport function unionToString(name, fields) {\n    if (fields.length === 0) {\n        return name;\n    }\n    else {\n        let fieldStr;\n        let withParens = true;\n        if (fields.length === 1) {\n            fieldStr = toString(fields[0]);\n            withParens = fieldStr.indexOf(\" \") >= 0;\n        }\n        else {\n            fieldStr = fields.map((x) => toString(x)).join(\", \");\n        }\n        return name + (withParens ? \" (\" : \" \") + fieldStr + (withParens ? \")\" : \"\");\n    }\n}\nexport class Union {\n    get name() {\n        return this.cases()[this.tag];\n    }\n    toJSON() {\n        return this.fields.length === 0 ? this.name : [this.name].concat(this.fields);\n    }\n    toString() {\n        return unionToString(this.name, this.fields);\n    }\n    GetHashCode() {\n        const hashes = this.fields.map((x) => structuralHash(x));\n        hashes.splice(0, 0, numberHash(this.tag));\n        return combineHashCodes(hashes);\n    }\n    Equals(other) {\n        if (this === other) {\n            return true;\n        }\n        else if (!sameConstructor(this, other)) {\n            return false;\n        }\n        else if (this.tag === other.tag) {\n            return equalArrays(this.fields, other.fields);\n        }\n        else {\n            return false;\n        }\n    }\n    CompareTo(other) {\n        if (this === other) {\n            return 0;\n        }\n        else if (!sameConstructor(this, other)) {\n            return -1;\n        }\n        else if (this.tag === other.tag) {\n            return compareArrays(this.fields, other.fields);\n        }\n        else {\n            return this.tag < other.tag ? -1 : 1;\n        }\n    }\n}\nfunction recordToJSON(self) {\n    const o = {};\n    const keys = Object.keys(self);\n    for (let i = 0; i < keys.length; i++) {\n        o[keys[i]] = self[keys[i]];\n    }\n    return o;\n}\nfunction recordToString(self) {\n    return \"{ \" + Object.entries(self).map(([k, v]) => k + \" = \" + toString(v)).join(\"\\n  \") + \" }\";\n}\nfunction recordGetHashCode(self) {\n    const hashes = Object.values(self).map((v) => structuralHash(v));\n    return combineHashCodes(hashes);\n}\nfunction recordEquals(self, other) {\n    if (self === other) {\n        return true;\n    }\n    else if (!sameConstructor(self, other)) {\n        return false;\n    }\n    else {\n        const thisNames = Object.keys(self);\n        for (let i = 0; i < thisNames.length; i++) {\n            if (!equals(self[thisNames[i]], other[thisNames[i]])) {\n                return false;\n            }\n        }\n        return true;\n    }\n}\nfunction recordCompareTo(self, other) {\n    if (self === other) {\n        return 0;\n    }\n    else if (!sameConstructor(self, other)) {\n        return -1;\n    }\n    else {\n        const thisNames = Object.keys(self);\n        for (let i = 0; i < thisNames.length; i++) {\n            const result = compare(self[thisNames[i]], other[thisNames[i]]);\n            if (result !== 0) {\n                return result;\n            }\n        }\n        return 0;\n    }\n}\nexport class Record {\n    toJSON() { return recordToJSON(this); }\n    toString() { return recordToString(this); }\n    GetHashCode() { return recordGetHashCode(this); }\n    Equals(other) { return recordEquals(this, other); }\n    CompareTo(other) { return recordCompareTo(this, other); }\n}\nexport class FSharpRef {\n    get contents() {\n        return this.getter();\n    }\n    set contents(v) {\n        this.setter(v);\n    }\n    constructor(contentsOrGetter, setter) {\n        if (typeof setter === \"function\") {\n            this.getter = contentsOrGetter;\n            this.setter = setter;\n        }\n        else {\n            this.getter = () => contentsOrGetter;\n            this.setter = (v) => { contentsOrGetter = v; };\n        }\n    }\n}\n// EXCEPTIONS\n// Exception is intentionally not derived from Error, for performance reasons (see #2160)\nexport class Exception {\n    constructor(message) {\n        this.message = message;\n    }\n}\nexport function isException(x) {\n    return x instanceof Exception || x instanceof Error;\n}\nexport function isPromise(x) {\n    return x instanceof Promise;\n}\nexport function ensureErrorOrException(e) {\n    // Exceptionally admitting promises as errors for compatibility with React.suspense (see #3298)\n    return (isException(e) || isPromise(e)) ? e : new Error(String(e));\n}\nexport class FSharpException extends Exception {\n    toJSON() { return recordToJSON(this); }\n    toString() { return recordToString(this); }\n    GetHashCode() { return recordGetHashCode(this); }\n    Equals(other) { return recordEquals(this, other); }\n    CompareTo(other) { return recordCompareTo(this, other); }\n}\nexport class MatchFailureException extends FSharpException {\n    constructor(arg1, arg2, arg3) {\n        super();\n        this.arg1 = arg1;\n        this.arg2 = arg2 | 0;\n        this.arg3 = arg3 | 0;\n        this.message = \"The match cases were incomplete\";\n    }\n}\nexport class Attribute {\n}\n","import { Union } from \"../../fable_modules/fable-library-js.4.19.3/Types.js\";\nimport { union_type } from \"../../fable_modules/fable-library-js.4.19.3/Reflection.js\";\n\nexport class NullableT$1 extends Union {\n    constructor(tag, fields) {\n        super();\n        this.tag = tag;\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Null\", \"T\"];\n    }\n}\n\nexport function NullableT$1_$reflection(gen0) {\n    return union_type(\"Timeline.Nullable.NullableT`1\", [gen0], NullableT$1, () => [[], [[\"Item\", gen0]]]);\n}\n\nexport function NullableT$1__get_Value(this$) {\n    if (this$.tag === 1) {\n        return this$.fields[0];\n    }\n    else {\n        throw new Error(\"Value is null\");\n    }\n}\n\nexport function NullableT(a) {\n    const matchValue = a;\n    if (matchValue instanceof NullableT$1) {\n        const nullable = matchValue;\n        return nullable;\n    }\n    else {\n        return new NullableT$1(1, [a]);\n    }\n}\n\n","import { equals, createAtom } from \"../fable_modules/fable-library-js.4.19.3/Util.js\";\nimport { NullableT$1__get_Value, NullableT, NullableT$1 } from \"../a-libs/timeline/x-nullable.fs.js\";\nimport * as vscode from \"vscode\";\n\nexport let currentPanel = createAtom(new NullableT$1(0, []));\n\nexport function createWebview(context) {\n    const panel = vscode.window.createWebviewPanel(\"fsharpWebview\", \"F# WebView\", 1, {\n        enableScripts: true,\n    });\n    panel.webview.html = \"\\n        <!DOCTYPE html>\\n        <html lang=\\\"en\\\">\\n        <head>\\n            <meta charset=\\\"UTF-8\\\">\\n            <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1.0\\\">\\n            <title>F# WebView</title>\\n        </head>\\n        <body>\\n            <h1>Hello from F# WebView!</h1>\\n        </body>\\n        </html>\\n    \";\n    panel.webview.onDidReceiveMessage((message) => {\n        if (message.command === \"hello\") {\n            vscode.window.showInformationMessage(\"Hello from WebView!\");\n        }\n    });\n    currentPanel(NullableT(panel));\n}\n\nexport function activate(context) {\n    const helloWorldCommand = vscode.commands.registerCommand(\"claude-chat-app.helloWorld\", (_arg) => {\n        vscode.window.showInformationMessage(\"Hello World from F#!\");\n    });\n    const showWebviewCommand = vscode.commands.registerCommand(\"claude-chat-app.showWebview\", (_arg_1) => {\n        createWebview(context);\n    });\n    void (context.subscriptions.push(helloWorldCommand));\n    void (context.subscriptions.push(showWebviewCommand));\n}\n\nexport function deactivate() {\n    if (equals(currentPanel(), new NullableT$1(0, []))) {\n    }\n    else {\n        NullableT$1__get_Value(currentPanel()).dispose();\n    }\n}\n\nexport const exports = {\n    activate: (context) => {\n        activate(context);\n    },\n    deactivate: () => {\n        deactivate();\n    },\n};\n\nexport default exports;\n\n"],"names":["isArrayLike","x","isComparable","isEquatable","isHashable","sameConstructor","y","_a","_b","dateOffset","date","date1","ObjectRef","o","stringHash","s","i","h","len","numberHash","bigintHash","combineHashCodes","hashes","h1","h2","dateHash","arrayHash","structuralHash","v","equalArraysWith","eq","equalArrays","equals","equalObjects","xKeys","yKeys","compareDates","xtime","ytime","compareArraysWith","comp","j","compareArrays","compare","compareObjects","key","createAtom","value","atom","args","seqToString","self","count","str","toString","callStack","cons","k","unionToString","name","fields","fieldStr","withParens","Union","other","NullableT$1","tag","NullableT$1__get_Value","this$","NullableT","a","matchValue","currentPanel","createWebview","context","panel","vscode","message","activate","helloWorldCommand","_arg","showWebviewCommand","_arg_1","deactivate","exports"],"mappings":"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"}